@page "/events"

@inject NavigationManager Navigation
@inject HttpClient Http
@using System.ComponentModel.DataAnnotations

<h2 class="centered-text">Events</h2>
<div id="sideNavbar" class="side-navbar">

    <div id="arrow" class="arrow-icon">►</div>

    <a href="/information" class="nav-link" aria-label="Navigate to Information">
        <img src="images/communication.png" alt="Information Icon" class="nav-icon">
        <span class="nav-text">Information</span>
    </a>
    <a href="/profile" class="nav-link" aria-label="Navigate to Profile">
        <img src="images/user.png" alt="Profile Icon" class="nav-icon">
        <span class="nav-text">Profile</span>
    </a>
    <a href="/gallery" class="nav-link" aria-label="Navigate to Gallery">
        <img src="images/gallery.png" alt="Gallery Icon" class="nav-icon">
        <span class="nav-text">Gallery</span>
    </a>
    <a href="/events" class="nav-link" aria-label="Navigate to Events">
        <img src="images/calendar.png" alt="Events Icon" class="nav-icon">
        <span class="nav-text">Events</span>
    </a>
    <a href="/userchat" class="nav-link" aria-label="Navigate to Chat Page">
        <img src="images/message.png" alt="Chat Icon" class="nav-icon">
        <span class="nav-text">Chat with Us</span>
    </a>
    <a href="/Welcome" class="nav-link" aria-label="Navigate to Home">
        <img src="images/home.png" alt="Home Icon" class="nav-icon">
        <span class="nav-text">Home</span>
    </a>
    <a href="/userReport" class="nav-link" aria-label="Navigate to UserReport">
        <img src="images/report.png" alt="Report Icon" class="nav-icon">
        <span class="nav-text">Report</span>
    </a>
</div>

<style>
    .bottom-nav {
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        width: 100%;
        height: 60px;
        background-color: #ffffff;
        box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.2);
        display: flex;
        justify-content: space-around;
        align-items: center;
        z-index: 1000;
        margin: 0;
        padding: 0;
    }

    .nav-item {
        flex: 1;
        text-align: center;
        transition: transform 0.3s ease, background-color 0.3s ease;
        padding: 5px;
    }

        .nav-item:hover {
            background-color: #f0f0f0;
            transform: scale(1.1);
            border-radius: 10px;
        }

    .nav-icon {
        width: 28px;
        height: 28px;
        filter: none;
    }

    .nav-center {
        position: relative;
        flex: 1;
        display: flex;
        justify-content: center;
    }

    .nav-center-btn {
        width: 50px;
        height: 50px;
        background-color: #8C7D70;
        border-radius: 50%;
        border: none;
        font-size: 24px;
        color: #fff;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
        cursor: pointer;
        position: absolute;
        top: -25px;
        transition: background-color 0.3s ease;
    }

        .nav-center-btn:hover {
            background-color: #6C6A5A;
        }

        .nav-center-btn:focus {
            outline: none;
        }

</style>


<!-- Calendar and Date Picker -->
<div class="calendar-container">
    <h3>Select a Date to See Events</h3>
    <input type="date" id="datepicker" @bind="selectedDate" class="date-picker" />



    <div class="calendar">
        <div class="header">
            <div class="day">Mon</div>
            <div class="day">Tue</div>
            <div class="day">Wed</div>
            <div class="day">Thu</div>
            <div class="day">Fri</div>
            <div class="day">Sat</div>
            <div class="day">Sun</div>
        </div>
        <div class="body">
            <!-- Calendar Days -->
            <div class="day" onclick="selectDate(1)">1</div>
            <div class="day" onclick="selectDate(2)">2</div>
            <div class="day" onclick="selectDate(3)">3</div>
            <div class="day" onclick="selectDate(4)">4</div>
            <div class="day" onclick="selectDate(5)">5</div>
            <div class="day" onclick="selectDate(6)">6</div>
            <div class="day" onclick="selectDate(7)">7</div>
            <div class="day" onclick="selectDate(8)">8</div>
            <div class="day" onclick="selectDate(9)">9</div>
            <div class="day" onclick="selectDate(10)">10</div>
            <div class="day" onclick="selectDate(11)">11</div>
            <div class="day" onclick="selectDate(12)">12</div>
            <div class="day" onclick="selectDate(13)">13</div>
            <div class="day" onclick="selectDate(14)">14</div>
            <div class="day" onclick="selectDate(15)">15</div>
            <div class="day" onclick="selectDate(16)">16</div>
            <div class="day" onclick="selectDate(17)">17</div>
            <div class="day" onclick="selectDate(18)">18</div>
            <div class="day" onclick="selectDate(19)">19</div>
            <div class="day" onclick="selectDate(20)">20</div>
            <div class="day" onclick="selectDate(21)">21</div>
            <div class="day" onclick="selectDate(22)">22</div>
            <div class="day" onclick="selectDate(23)">23</div>
            <div class="day" onclick="selectDate(24)">24</div>
            <div class="day" onclick="selectDate(25)">25</div>
            <div class="day" onclick="selectDate(26)">26</div>
            <div class="day" onclick="selectDate(27)">27</div>
            <div class="day" onclick="selectDate(28)">28</div>
            <div class="day" onclick="selectDate(29)">29</div>
            <div class="day" onclick="selectDate(30)">30</div>
            <div class="day" onclick="selectDate(31)">31</div>
        </div>
    </div>
    <script>
        function selectDate(day) {
            const datepicker = document.getElementById('datepicker');
            const today = new Date();
            const month = today.getMonth() + 1; // Months are 0-based
            const year = today.getFullYear();
            datepicker.value = `${year}-${month < 10 ? '0' + month : month}-${day < 10 ? '0' + day : day}`;
        }
    </script>






</div>

<!-- Events List -->
<div class="events-container">
    <h3 class="centered-text">Events on @selectedDate.ToShortDateString()</h3>
    <ul>
        @foreach (var ev in events)
        {
            <li class="event-item">
                <strong>@ev.eventDate</strong>
                <strong>@ev.eventName</strong>
                <p>@ev.eventDescription</p>
            </li>
        }
    </ul>
</div>

<div class="bottom-nav">
    <a href="/information" class="nav-item" aria-label="Information"<img src="images/communication.png" alt="Information" class="nav-icon"></a>
    <a href="/profile" class="nav-item" aria-label="Profile"> <img src="images/user.png" alt="Profile" class="nav-icon"></a>
    <a href="/gallery" class="nav-item" aria-label="Gallery"<img src="images/gallery.png" alt="Gallery" class="nav-icon"></a>
    <a href="/events" class="nav-item" aria-label="Events"<img src="images/calendar.png" alt="Events" class="nav-icon"></a>
    <a href="/userchat" class="nav-item" aria-label="Chat with Us"> <img src="images/message.png" alt="Chat" class="nav-icon"> </a>
    <a href="/Welcome" class="nav-link" aria-label="Navigate to Home"><img src="images/home.png" alt="Home Icon" class="nav-icon"> </a>
    <a href="/userReport" class="nav-link" aria-label="Navigate to UserReport"> <img src="images/report.png" alt="Report Icon" class="nav-icon"> </a>
</div>

@code {
    private DateTime selectedDate = DateTime.Now;
    private List<Event> events = new List<Event>();

    protected override async Task OnInitializedAsync()
    {
        await LoadEvents();
    }

    private void OnDateChanged(ChangeEventArgs e)
    {
        if (DateTime.TryParse(e.Value.ToString(), out var date))
        {
            selectedDate = date;
            LoadEvents();
        }
    }

    private async Task LoadEvents()
    {
        // Load events based on the selected date (placeholder logic)
        events = await Http.GetFromJsonAsync<List<Event>>("https://spcaapi.azurewebsites.net/api/events/GetEvents");

    }

    public class Event
    {
        public string eventName { get; set; }
        public string eventDescription { get; set; }
        public string eventId { get; set; }
        public string eventDate { get; set; }
    }
}

<style>
    .centered-text {
        text-align: center;
        font-family: Arial, sans-serif;
        color: #143963;
    }

    .calendar-container {
        padding: 20px;
        text-align: center;
        color: #143963;
    }

    .date-picker {
        padding: 10px;
        border-radius: 5px;
        border: 1px solid #ccc;
        margin: 10px 0;
        color: #143963;
    }

    /* .calendar {
        margin: 20px auto;
        background-color: #e6f7ff;
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
        border-color: #143963;
       
    } */


    .calendar {
        width: 80%;
        max-width: 1000px;
        margin: 0 auto;
        border: 1px solid #ccc;
    }

    .header {
        display: flex;
        background-color: #143963;
        color: white;
    }

        .header .day {
            flex: 1; /* Ensure that each header takes equal space */
            text-align: center;
            padding: 7px;
        }

    .day {
        flex: 1; /* Ensure that each day takes equal space */
        text-align: center;
        padding: 20px;
        border: 1px solid #ccc;
        box-sizing: border-box; /* Ensure padding does not affect width */
    }

        .day:hover {
            background-color: #e0e0e0;
        }

    .body {
        display: flex;
        flex-wrap: wrap; /* Allow wrapping of days to create rows */
    }

        /* Ensure each day takes the same width as headers */
        .body .day {
            flex: 1; /* Ensure that each day takes equal space */
            min-width: 14.2857%; /* 100% divided by 7 days */
            box-sizing: border-box; /* Ensure padding does not affect width */
        }





    .events-container {
        padding: 20px;
        color: #143963;
    }

    .event-item {
        background-color: #143963;
         border: 1px solid #e6f7ff;
        ;
        border-radius: 5px;
        padding: 15px;
        margin-bottom: 15px;
        text-align: center;
        color: #e6f7ff;
        
    }

        .event-item strong {
            display: block;
            font-size: 1 em;
            margin-bottom: 10px;
        }

        .event-item p {
            margin: 0;
            font-size: 0.8 em;
        }

    .side-navbar {
        height: 100%;
        width: 60px; /* Default width for icons only */
        position: fixed;
        top: 0;
        left: 0;
        background-color: #143963;
        overflow-x: hidden;
        transition: width 0.3s ease; /* Smooth expansion */
        padding-top: 60px;
        z-index: 100;
        border-right: 2px solid #ffffff;
    }

        .side-navbar:hover {
            width: 250px; /* Expanded width */
        }

    .nav-link {
        display: flex;
        align-items: center;
        padding: 15px 20px;
        font-size: 1.2em;
        color: #e0f7fa;
        transition: background-color 0.3s ease;
        text-decoration: none;
    }

        .nav-link:hover {
            background-color: #4775A9;
            color: #ffffff;
        }

    .nav-icon {
        width: 24px;
        height: 24px;
        margin-right: 15px;
        transition: margin-right 0.3s ease;
    }

    .side-navbar:hover .nav-icon {
        margin-right: 10px; /* Adjust spacing when expanded */
    }

    .nav-text {
        display: none; /* Hide text by default */
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .side-navbar:hover .nav-text {
        display: inline; /* Show text on hover */
        opacity: 1;
    }
    /* Arrow icon styling */
    .arrow-icon {
        font-size: 16px;
        color: #ffffff;
        text-align: center;
        margin-bottom: 10px;
        display: block;
        transform: rotate(0deg);
        transition: opacity 0.3s ease;
    }

    .side-navbar:hover .arrow-icon {
        opacity: 0;
    }

    .bottom-nav {
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        width: 100%;
        height: 60px;
        background-color: #143963;
        box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.2);
        display: none; /* Initially hidden */
        justify-content: space-around;
        align-items: center;
        z-index: 1000;
    }

    .nav-item {
        flex: 1;
        text-align: center;
        transition: transform 0.3s ease, background-color 0.3s ease;
        padding: 5px;
    }

        .nav-item:hover {
            background-color: #f0f0f0;
            transform: scale(1.1);
            border-radius: 10px;
        }
    /* Responsive styles */
    @@media screen and (max-width: 768px) {
        .side-navbar {
            display: none; 
        }

        .main-content {
            margin-left: 0;
        }

        .bottom-nav {
            display: flex; 
        }
    }

    @@media screen and (min-width: 769px) {
        .bottom-nav {
            display: none;
        }
    }

    .main-content {
        margin-left: 250px;
        padding: 20px;
        position: relative;
        background-color: #143963;
        color: white;
        border-radius: 8px;

    }
    }
</style>

<script>
    function openNav() {
        document.getElementById("sideNavbar").style.width = "250px";
    }

    function closeNav() {
        document.getElementById("sideNavbar").style.width = "0";
    }
</script>

