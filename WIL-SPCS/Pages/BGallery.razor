@page "/bgallery"
<h3>Gallery</h3>
@inject NavigationManager Navigation
@inject HttpClient Http

<div class="side-navbar">
    <div class="nav-header">Navigation</div>
    <a href="/bdashboard">Dashboard</a>
    <a href="/bgallery">Gallery</a>
    <a href="/binformation">Information</a>
</div>

<div>
    <center>
        <h3 style="color: #143963;">Gallery</h3>
        <input type="text" @oninput="search" placeholder="dog, cat..." class="desktop-search-bar">
    </center>
</div>

<div class="gallery-container">
    <div class="gallery">
        @foreach (var pet in pets)
        {
            <div class="gallery-item">
                @if (pet.imageUrl.Contains("jpg"))
                {
                    <img src="@pet.imageUrl" alt="@pet.name">
                }
                else if (pet.imageUrl.Contains(".mp4"))
                {
                    <video src="@pet.imageUrl" controls></video>
                }
                <div class="overlay">
                    <div class="info">
                        <h4>@pet.name</h4>
                        <p>Breed: @pet.breed</p>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {
    List<Pet> pets = new List<Pet>();
    List<Pet> backupPets = new List<Pet>();
    protected override async Task OnInitializedAsync()
    {
        await GetPets();
    }
    private async Task GetPets()
    {
        /*
        Code Attribution
        Title: GET Request to API with Blazor/C#
        Author: ZetBit
        Link: https://www.youtube.com/watch?v=SjhzOauYC80
        Usage: Used to make get request in blazer
        */
        pets = await Http.GetFromJsonAsync<List<Pet>>("https://spcaapi.azurewebsites.net/api/Animal/GetAnimals");
        backupPets = pets;
    }
    public class Pet
    {
        public string petId { get; set; }
        public string name { get; set; }
        public string breed { get; set; }
        public string health { get; set; }
        public string weight { get; set; }
        public string adoptionStatus { get; set; }
        public string animalType { get; set; }
        public string imageUrl { get; set; }
    }
    private void search(ChangeEventArgs e)
    {
        var searchText = e.Value.ToString()?.Trim().ToLower() ?? string.Empty;
        if (!string.IsNullOrEmpty(searchText))
        {
            pets = backupPets.Where(pet => pet.animalType.ToLower().Contains(searchText)).ToList();
        }
        else
        {
            pets = new List<Pet>(backupPets);
        }
        StateHasChanged();
    }
}

<style>

    .side-navbar {
        height: 100%;
        width: 200px;
        position: fixed;
        top: 0;
        left: 0;
        background-color: #143963;
        display: flex;
        flex-direction: column;
        padding-top: 20px;
        box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
        color: white;
    }

        .side-navbar a {
            padding: 15px 20px;
            font-size: 1.1em;
            color: white;
            text-decoration: none;
            transition: background 0.3s ease;
        }

            .side-navbar a:hover {
                background-color: #3e5f8c;
            }

    .nav-header {
        padding: 15px;
        font-size: 1.5em;
        text-align: center;
        font-weight: bold;
        border-bottom: 1px solid #798DA3;
        margin-bottom: 10px;
    }

    .main-content {
        margin-left: 200px;
        transition: margin-left 0.5s;
        padding: 30px;
    }

    .gallery-container {
        display: flex;
        justify-content: center;
        padding: 20px;
    }

    .gallery {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 20px;
        max-width: 800px;
        width: 100%;
        box-sizing: border-box;
    }

    .gallery-item {
        overflow: hidden;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        position: relative;
        max-width: 100%;
    }

        .gallery-item img,
        .gallery-item video {
            width: 100%;
            height: auto;
            max-height: 200px;
            border-radius: 8px;
            object-fit: cover;
            transition: transform 0.3s ease;
        }

        .gallery-item:hover img,
        .gallery-item:hover video {
            transform: scale(1.05);
        }

    .overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0, 0, 0, 0.7);
        color: white;
        display: flex;
        justify-content: center;
        align-items: center;
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .gallery-item:hover .overlay {
        opacity: 1;
    }

    .info {
        text-align: center;
    }


    .main-content {
        padding: 40px;
    }

    .desktop-search-bar {
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        width: 80%;
        max-width: 300px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        display: inline-block;
    }

    
</style>

