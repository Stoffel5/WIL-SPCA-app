@page "/gallery"

@inject NavigationManager Navigation
@inject HttpClient Http

<button class="open-btn" onclick="openNav()">☰</button>


<div id="sideNavbar" class="side-navbar">

    <div id="arrow" class="arrow-icon">►</div>

    <a href="/information" class="nav-link" aria-label="Navigate to Information">
        <img src="images/communication.png" alt="Information Icon" class="nav-icon">
        <span class="nav-text">Information</span>
    </a>
    <a href="/profile" class="nav-link" aria-label="Navigate to Profile">
        <img src="images/user.png" alt="Profile Icon" class="nav-icon">
        <span class="nav-text">Profile</span>
    </a>
    <a href="/gallery" class="nav-link" aria-label="Navigate to Gallery">
        <img src="images/gallery.png" alt="Gallery Icon" class="nav-icon">
        <span class="nav-text">Gallery</span>
    </a>
    <a href="/events" class="nav-link" aria-label="Navigate to Events">
        <img src="images/calendar.png" alt="Events Icon" class="nav-icon">
        <span class="nav-text">Events</span>
    </a>
    <a href="/userchat" class="nav-link" aria-label="Navigate to Chat Page">
        <img src="images/message.png" alt="Chat Icon" class="nav-icon">
        <span class="nav-text">Chat with Us</span>
    </a>
    <a href="/Welcome" class="nav-link" aria-label="Navigate to Home">
        <img src="images/home.png" alt="Home Icon" class="nav-icon">
        <span class="nav-text">Home</span>
    </a>
    <a href="/userReport" class="nav-link" aria-label="Navigate to UserReport">
        <img src="images/report.png" alt="Report Icon" class="nav-icon">
        <span class="nav-text">Report</span>
    </a>
</div>

<div>
    <center><h3 style="color: #143963;">Gallery</h3></center>
    <center>
        <input type="text" @oninput="search" placeholder="dog,cat..." class="desktop-search-bar">
        <button class="search-button">Search</button>
    </center>
</div>
               

<div class="gallery">
    @foreach(var pet in pets)
    {
        @if (pet.imageUrl.Contains("jpg"))
        {
            <div class="gallery-item">
                <img src="@pet.imageUrl" alt="@pet.name">
            </div>
        }
        else if (pet.imageUrl.Contains(".mp4"))
        {
            <div class="gallery-item">
                <video src="@pet.imageUrl" controls></video>
            </div>
        }
    }
</div>
<div class="bottom-nav">
    <a href="/information" class="nav-item" aria-label="Information"<img src="images/communication.png" alt="Information" class="nav-icon"></a>
    <a href="/profile" class="nav-item" aria-label="Profile"> <img src="images/user.png" alt="Profile" class="nav-icon"></a>
    <a href="/gallery" class="nav-item" aria-label="Gallery"<img src="images/gallery.png" alt="Gallery" class="nav-icon"></a>
    <a href="/events" class="nav-item" aria-label="Events"<img src="images/calendar.png" alt="Events" class="nav-icon"></a>
    <a href="/userchat" class="nav-item" aria-label="Chat with Us"> <img src="images/message.png" alt="Chat" class="nav-icon"> </a>
    <a href="/Welcome" class="nav-link" aria-label="Navigate to Home"><img src="images/home.png" alt="Home Icon" class="nav-icon"> </a>
    <a href="/userReport" class="nav-link" aria-label="Navigate to UserReport"> <img src="images/report.png" alt="Report Icon" class="nav-icon"> </a>
</div>

@code {
    List<Pet> pets = new List<Pet>();
    List<Pet> backupPets = new List<Pet>();
    protected override async Task OnInitializedAsync()
    {
        await GetPets();
    }
    private async Task GetPets()
    {
        /*
        Code Attribution
        Title: GET Request to API with Blazor/C#
        Author: ZetBit
        Link: https://www.youtube.com/watch?v=SjhzOauYC80
        Usage: Used to make get request in blazer
        */
        pets = await Http.GetFromJsonAsync<List<Pet>>("https://spcaapi.azurewebsites.net/api/Animal/GetAnimals");
        backupPets = pets;
    }
    public class Pet
    {
        public string petId { get; set; }
        public string name { get; set; }
        public string breed { get; set; }
        public string health { get; set; }
        public string weight { get; set; }
        public string adoptionStatus { get; set; }
        public string animalType { get; set; }
        public string imageUrl { get; set; }
    }
    private void search(ChangeEventArgs e)
    {
        var searchText = e.Value.ToString()?.Trim().ToLower() ?? string.Empty;
        if (!string.IsNullOrEmpty(searchText))
        {
            pets = backupPets.Where(pet => pet.animalType.ToLower().Contains(searchText)).ToList();
        }
        else
        {
            pets = new List<Pet>(backupPets);
        }
        StateHasChanged();
    }
}

<style>
    .gallery {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 15px;
        padding: 20px;
    }

    .gallery-item {
        overflow: hidden;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        position: relative;
        padding-top: 56.25%; 
    }

        .gallery-item img,
        .gallery-item video {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: cover; 
            border-radius: 8px;
            transition: transform 0.3s ease;
        }

        .gallery-item:hover img,
        .gallery-item:hover video {
            transform: scale(1.05);
        }


  
    .side-navbar {
        height: 100%;
        width: 60px; /* Default width for icons only */
        position: fixed;
        top: 0;
        left: 0;
        background-color: #143963;
        overflow-x: hidden;
        transition: width 0.3s ease; /* Smooth expansion */
        padding-top: 60px;
        z-index: 100;
        border-right: 2px solid #ffffff;
    }

        .side-navbar:hover {
            width: 250px; /* Expanded width */
        }

    .nav-link {
        display: flex;
        align-items: center;
        padding: 15px 20px;
        font-size: 1.2em;
        color: #e0f7fa;
        transition: background-color 0.3s ease;
        text-decoration: none;
    }

        .nav-link:hover {
            background-color: #4775A9;
            color: #ffffff;
        }

    .nav-icon {
        width: 24px;
        height: 24px;
        margin-right: 15px;
        transition: margin-right 0.3s ease;
    }

    .side-navbar:hover .nav-icon {
        margin-right: 10px; /* Adjust spacing when expanded */
    }

    .nav-text {
        display: none; /* Hide text by default */
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .side-navbar:hover .nav-text {
        display: inline; /* Show text on hover */
        opacity: 1;
    }

    .main-content {
        padding: 40px;
    }

    .desktop-search-bar {
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        width: 80%;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    .search-button {
        padding: 8px 15px;
        margin-left: 10px;
        font-size: 14px;
        border: none;
        border-radius: 5px;
        background-color: #143963;
        color: #fff;
        cursor: pointer;
        transition: background-color 0.3s ease, color 0.3s ease;
    }

        .search-button:hover {
            border: #143963;
            background-color: #fff;
            color: #143963;
        }

    /* Arrow icon styling */
    .arrow-icon {
        font-size: 16px;
        color: #ffffff;
        text-align: center;
        margin-bottom: 10px;
        display: block;
        transform: rotate(0deg);
        transition: opacity 0.3s ease;
    }

    .side-navbar:hover .arrow-icon {
        opacity: 0;
    }

    .bottom-nav {
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        width: 100%;
        height: 60px;
        background-color: #143963;
        box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.2);
        display: none; /* Initially hidden */
        justify-content: space-around;
        align-items: center;
        z-index: 1000;
    }

    .nav-item {
        flex: 1;
        text-align: center;
        transition: transform 0.3s ease, background-color 0.3s ease;
        padding: 5px;
    }

        .nav-item:hover {
            background-color: #f0f0f0;
            transform: scale(1.1);
            border-radius: 10px;
        }

    /* Responsive styles */
    @@media screen and (max-width: 768px) {
        .side-navbar {
            display: none; /* Hide sidebar on small screens */
        }

        .main-content {
            margin-left: 0; /* Remove margin on small screens */
        }

        .bottom-nav {
            display: flex; /* Show bottom nav on small screens */
        }
    }

    @@media screen and (min-width: 769px) {
        .bottom-nav {
            display: none; /* Hide bottom nav on larger screens */
        }
    }
</style>
