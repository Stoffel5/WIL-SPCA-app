@page "/profile"

@inject NavigationManager Navigation
@inject HttpClient Http
@using System.ComponentModel.DataAnnotations
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Profile</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: Arial, sans-serif;
        }

        body {
            display: flex;
            justify-content: center;
            align-items: center;
            background-color: #f0f2f5;
            min-height: 100vh;
            color: #143963;
        }

        .profile-container {
            background-color: #ffffff;
            border-radius: 8px;
            max-width: 700px;
            width: 100%;
            padding: 30px;
            box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.1);
        }

        .profile-header {
            text-align: center;
            margin-bottom: 20px;
        }

            .profile-header h2 {
                font-size: 28px;
                color: #143963;
            }

        .profile-picture {
            position: relative;
            margin: 0 auto 20px;
            width: 120px;
            height: 120px;
            border-radius: 50%;
            overflow: hidden;
            border: 4px solid #143963;
        }

            .profile-picture img {
                width: 100%;
                height: 100%;
                object-fit: cover;
            }

        .change-photo {
            display: block;
            text-align: center;
            color: #143963;
            cursor: pointer;
            font-size: 14px;
            margin-top: 10px;
        }

        .profile-form label {
            font-weight: bold;
            color: #143963;
            display: block;
            margin-bottom: 5px;
        }

        .profile-form input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 14px;
            color: #143963;
            margin-bottom: 15px;
            background-color: #f0f2f5;
        }

        .form-group {
            display: flex;
            gap: 20px;
            flex-wrap: wrap;
        }

        .form-group-half {
            flex: 1;
        }

        .form-actions {
            text-align: center;
            margin-top: 20px;
        }

            .form-actions button {
                background-color: #143963;
                color: #ffffff;
                padding: 12px 24px;
                border: none;
                border-radius: 4px;
                font-size: 16px;
                cursor: pointer;
                margin: 0 10px;
            }

                .form-actions button:hover {
                    background-color: #0f2b52;
                }

        .profile-form input[disabled] {
            background-color: #eaeaea;
            cursor: not-allowed;
        }
    </style>
</head>
<body>

    <div class="profile-container">
        <div class="profile-header">
            <h2>User Profile</h2>
        </div>

        <div class="profile-picture">
            <img src="@user.imageUrl" alt="Profile Picture" id="profilePic">
        </div>
        <label class="change-photo" for="profilePicInput">Change Profile Picture</label>
        <input type="file" id="profilePicInput" accept="image/*" style="display:none;" onchange="previewProfilePic(event)">

        <form class="profile-form" id="profileForm">
            <div class="form-group">
                <div class="form-group-half">
                    <label for="firstName">First Name</label>
                    <input type="text" id="firstName" placeholder="@user.FirstName" disabled>
                </div>
                <div class="form-group-half">
                    <label for="lastName">Last Name</label>
                    <input type="text" id="lastName" placeholder="@user.LastName" disabled>
                </div>
            </div>

            <div class="form-group">
                <div class="form-group-half">
                    <label for="email">Email</label>
                    <input type="email" id="email" placeholder="@user.Email" disabled>
                </div>
                <div class="form-group-half">
                    <label for="phone">Phone Number</label>
                    <input type="tel" id="phone" placeholder="@user.PhoneNumber" disabled>
                </div>
            </div>

            <div class="form-group">
                <div class="form-group-half">
                    <label for="address">Address</label>
                    <input type="text" id="address" placeholder="@user.Address" disabled>
                </div>
                <div class="form-group-half">
                    <label for="city">City</label>
                    <input type="text" id="city" placeholder="@user.City" disabled>
                </div>
            </div>

            <div class="form-actions">
                <button type="button" onclick="toggleEditMode()">Edit Profile</button>
                <button type="button" onclick="saveChanges()" style="display: none;">Save Changes</button>
            </div>
        </form>
    </div>
    <script>
        function previewProfilePic(event) {
            const profilePic = document.getElementById('profilePic');
            profilePic.src = URL.createObjectURL(event.target.files[0]);
        }

        function toggleEditMode() {
            const inputs = document.querySelectorAll('#profileForm input');
            inputs.forEach(input => input.disabled = !input.disabled);
            document.querySelector('.form-actions button[onclick="toggleEditMode()"]').style.display = 'none';
            document.querySelector('.form-actions button[onclick="saveChanges()"]').style.display = 'inline-block';
        }

        function saveChanges() {
            const inputs = document.querySelectorAll('#profileForm input');
            inputs.forEach(input => input.disabled = true);
            document.querySelector('.form-actions button[onclick="toggleEditMode()"]').style.display = 'inline-block';
            document.querySelector('.form-actions button[onclick="saveChanges()"]').style.display = 'none';
        }
    </script>

</body>
@code{
    public class User
    {
        public string Email { get; set; }
        public string usertype { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string PhoneNumber { get; set; }
        public string City { get; set; }
        public string Address { get; set; }
        public string imageUrl { get; set; }
    }
    private IBrowserFile selectedFile;
    private User user = new User();

    protected override async Task OnInitializedAsync()
    {
        user.Email = await LocalStorage.GetItemAsync<string>("email");
        await GetUsers();
    }
    private async Task GetUsers()
    {
        /*
        Code Attribution
        Title: GET Request to API with Blazor/C#
        Author: ZetBit
        Link: https://www.youtube.com/watch?v=SjhzOauYC80
        Usage: Used to make get request in blazer
        */
        user = await Http.GetFromJsonAsync<User>("https://spcaapi.azurewebsites.net/api/User/GetInfo/" + user.Email);
    }
    private async Task EditUser()
    {
        // make content for post request
        var content = new MultipartFormDataContent();
        content.Add(new StringContent(user.Email), "Email");
        content.Add(new StringContent(user.FirstName), "Firstname");
        content.Add(new StringContent(user.LastName), "Lastname");
        content.Add(new StringContent(user.PhoneNumber), "PhoneNumber");
        content.Add(new StringContent(user.City), "City");
        content.Add(new StringContent(user.Address), "Address");

        // add file to request
        if (selectedFile != null)
        {
            var streamContent = new StreamContent(selectedFile.OpenReadStream(5 * 1024 * 1024));
            content.Add(streamContent, "image", selectedFile.Name);
        }
        else
        {
            content.Add(new StringContent(""), "image");
        }

        // make request
        var response = await Http.PatchAsync($"https://spcaapi.azurewebsites.net/api/User", content);

        // if/else get reponse
        if (response.IsSuccessStatusCode)
        {
            Navigation.NavigateTo("/profile", true);
            StateHasChanged();
        }
        else
        {
            Console.WriteLine("Error editing user: " + response.ReasonPhrase);
        }
    }
}
</html>
